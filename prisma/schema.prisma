// Schema do Banco de Dados - Sistema Corpo de Bombeiros
// Versão: 1.0

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// Tabela: Militar
model Militar {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  nome         String?
  matricula    String?  @unique
  posto        String?
  email        String?
  senhaHash    String?  @map("senha_hash")
  perfilAcesso String?  @map("perfil_acesso")

  // Relacionamentos
  equipesLideradas    Equipe[]           @relation("EquipeLider")
  militarEquipes      MilitarEquipe[]
  registrosOcorrencia RegistroOcorrencia[]
  logsAuditoria       LogAuditoria[]
  relatorios          Relatorio[]

  @@map("Militar")
}

// Tabela: Equipe
model Equipe {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  nomeEquipe       String?  @map("nome_equipe")
  turno            String?
  idMilitarLider   String?  @db.ObjectId

  // Relacionamentos
  lider               Militar?            @relation("EquipeLider", fields: [idMilitarLider], references: [id])
  militarEquipes      MilitarEquipe[]
  registrosOcorrencia RegistroOcorrencia[]

  @@map("Equipe")
}

// Tabela: Ocorrencia
model Ocorrencia {
  id                String    @id @default(auto()) @map("_id") @db.ObjectId
  dataHora          DateTime? @map("data_hora")
  tipoOcorrencia    String?   @map("tipo_ocorrencia")
  descricao         String?
  cidade            String?
  bairro            String?          
  localizacaoGps    String?   @map("localizacao_gps")
  status            String?
  assinaturaDigital String?   @map("assinatura_digital")
  fotoUrl           String?   @map("foto_url")
  videoUrl          String?   @map("video_url")

  // Relacionamentos
  registrosOcorrencia RegistroOcorrencia[]
  relatorios          Relatorio[]

  @@map("Ocorrencia")
}

// Tabela: RegistroOcorrencia
model RegistroOcorrencia {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  idOcorrencia   String?   @db.ObjectId
  idMilitar      String?   @db.ObjectId
  idEquipe       String?   @db.ObjectId
  dataRegistro   DateTime? @map("data_registro")
  observacoes    String?

  // Relacionamentos
  ocorrencia Ocorrencia? @relation(fields: [idOcorrencia], references: [id])
  militar    Militar?    @relation(fields: [idMilitar], references: [id])
  equipe     Equipe?     @relation(fields: [idEquipe], references: [id])

  @@map("RegistroOcorrencia")
}

// Tabela: LogAuditoria
model LogAuditoria {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  idMilitar  String?   @db.ObjectId
  acao       String?
  dataHora   DateTime? @map("data_hora")
  ipOrigem   String?   @map("ip_origem")

  // Relacionamentos
  militar Militar? @relation(fields: [idMilitar], references: [id])

  @@map("LogAuditoria")
}

// Tabela: Relatorio
model Relatorio {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  idOcorrencia  String?   @db.ObjectId
  geradoPor     String?   @db.ObjectId
  dataGeracao   DateTime? @map("data_geracao")
  formato       String?
  urlArquivo    String?   @map("url_arquivo")

  // Relacionamentos
  ocorrencia Ocorrencia? @relation(fields: [idOcorrencia], references: [id])
  militar    Militar?    @relation(fields: [geradoPor], references: [id])

  @@map("Relatorio")
}

// Tabela de Junção: MilitarEquipe
model MilitarEquipe {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  idMilitar  String @db.ObjectId
  idEquipe   String @db.ObjectId

  // Relacionamentos
  militar Militar @relation(fields: [idMilitar], references: [id])
  equipe  Equipe  @relation(fields: [idEquipe], references: [id])

  @@map("MilitarEquipe")
}
